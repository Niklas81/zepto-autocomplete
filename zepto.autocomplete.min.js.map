{"version":3,"file":"zepto.autocomplete.min.js","sources":["zepto.autocomplete.min.js"],"names":["$","methods","init","settings","createOptionsDiv","position","$appendDiv","$optionsContainerDiv","css","left","$this","offset","top","height","addClass","extraClass","attr","on","chooseOption","appendTo","append","data","sort","_autoCompleteData","open","show","trigger","close","hide","onBlur","event","optIndex","value","option","target","closest","onOptionSelect","undefined","val","computeOptions","setTimeout","focus","changeCurrentOpt","$other","$currentOpt","removeClass","callback","$optionDiv","$divs","query","empty","length","minLength","i","maxCount","dataMethod","Function","matcher","renderOption","add","keyHandler","prev","next","keyCode","children","eq","hasClass","this","settingsDefaults","Infinity","toString","toLowerCase","indexOf","lookUp","options","each","idx","push","closeCallback","storedData","extend","bind","destroy","unbind","remove","unique","arr","uniqArr","el","inArray","Array","concat","index","splice","fn","autocomplete","method","apply","prototype","slice","call","arguments","error","Zepto","jQuery"],"mappings":"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","sourcesContent":["/**\n * Zepto-Autocomplete\n * @author Yugal Jindle\n * @repo   https://github.com/yugal/zepto-autocomplete.git\n */\n\n(function($) {\n    'use strict';\n\n    var methods = {\n        init: function(settings) {\n            var $currentOpt,\n                $this = this, // selected zepto/jquery input\n                settingsDefaults = {\n                    data: [],\n                    dataMethod: undefined,\n                    minLength: 1,\n                    maxCount: Infinity,\n                    extraClass: '',\n                    appendTo: undefined,\n                    position: true,\n                    sort: function(data) {\n                        // Skip sorting if data received from `dataMethod`\n                        return (this.dataMethod instanceof Function)? data:data.sort();\n                    },\n                    matcher: function(query, option) {\n                        return option.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1;\n                    },\n                    lookUp: function(data, option) {\n                        var options = [];\n                        $.each(data, function(idx, val) {\n                            options.push(val.toString());\n                        });\n                        return options.indexOf(option.toString());\n                    },\n                    renderOption: function(option) {\n                        return option.toString();\n                    },\n                    onOptionSelect: function(option) {\n                        return option.toString(); // Returned value updates the input\n                    },\n                    onBlur: function(closeCallback) {\n                        closeCallback();\n                    }\n                },\n                storedData = $this[0]._autoCompleteData;\n\n            settings = $.extend(settingsDefaults, settings);\n            // Disable `position` if appendTo\n            settings.position = (settings.appendTo)? false:settings.position;\n\n            function createOptionsDiv() {\n                var position, $appendDiv, $optionsContainerDiv;\n                $optionsContainerDiv = $('<div>').css('display', 'none');\n                if(settings.position) {\n                    position = {\n                        left: $this.offset().left,\n                        top: $this.offset().top + $this.height()\n                    };\n                    $optionsContainerDiv.css('position', 'relative').css('top', position.top).css('left', position.left).css('zIndex', 1000);\n                }\n                // Configure $optionsContainerDiv\n                $optionsContainerDiv.addClass('ac-options').addClass(settings.extraClass);  // Adds class ac-options\n                $this.attr('data-ac', 'true');\n                $optionsContainerDiv.on('mousedown.ac', 'div', chooseOption);\n                $appendDiv = (settings.appendTo)? $(settings.appendTo):$('body');\n                $appendDiv.append($optionsContainerDiv);\n                settings.data = settings.sort(settings.data);\n                // Save\n                $this[0]._autoCompleteData = {\n                    settings: settings,\n                    $optionsContainerDiv: $optionsContainerDiv\n                };\n            }\n            function open() {\n                var $optionsContainerDiv = $this[0]._autoCompleteData.$optionsContainerDiv;\n                $optionsContainerDiv.show();\n                $this.trigger('opened');\n            }\n            function close() {\n                var $optionsContainerDiv = $this[0]._autoCompleteData.$optionsContainerDiv;\n                $optionsContainerDiv.hide();\n                $this.trigger('closed');\n            }\n            function onBlur() {\n                var settings = $this[0]._autoCompleteData.settings;\n                settings.onBlur(close);\n            }\n            function chooseOption(event, optIndex) {\n                var value, option,\n                    settings = $this[0]._autoCompleteData.settings;\n                optIndex = optIndex || $(event.target).closest('.ac-opt').attr('data-opt-idx');\n                option = settings.data[optIndex];\n                value = settings.onOptionSelect(option);\n                if(value !== undefined) {\n                    $this.val(value);\n                }\n                computeOptions();\n                setTimeout(function() {\n                    $this.focus();\n                });\n            }\n            function changeCurrentOpt($other) {\n                if($currentOpt) {\n                    $currentOpt.removeClass('ac-opt-curr');  // Removes class ac-opt-curr\n                }\n                $currentOpt = $other;\n                $currentOpt.addClass('ac-opt-curr');  // Adds class ac-opt-curr\n            }\n            function computeOptions() {\n                var option,\n                    callback,\n                    $optionDiv,\n                    $divs = $(), // List with zepto/jQuery methods\n                    query = $this.val(),\n                    $optionsContainerDiv = $this[0]._autoCompleteData.$optionsContainerDiv,\n                    settings = $this[0]._autoCompleteData.settings;\n                $optionsContainerDiv.empty(); // No events on `options` (safe)\n                // Honor minLength\n                if(query.length<settings.minLength) {\n                    close();\n                    return;\n                }\n                // Compute callback\n                callback = function(data) {\n                    settings.data = settings.sort(data);\n                    for(var i=0; i<data.length && $divs.length<=settings.maxCount; i++) {\n                        option = data[i];\n                        // Don't match if data received from `dataMethod`\n                        if (settings.dataMethod instanceof Function || settings.matcher(query, option)) {\n                            // Adds class ac-opt\n                            $optionDiv = $('<div></div>').addClass('ac-opt');\n                            $optionDiv.attr('data-opt-idx', i);\n                            $optionDiv.append(settings.renderOption(option));\n                            $divs = $divs.add($optionDiv);\n                        }\n                    }\n                    if ($divs.length>0) {\n                        $optionsContainerDiv.append($divs);\n                        open();\n                    }\n                };\n                if(settings.dataMethod instanceof Function) {\n                    settings.dataMethod(query, callback);\n                } else {\n                    callback(settings.data);\n                }\n            }\n            function keyHandler(event) {\n                var prev, next,\n                    $optionsContainerDiv = $this[0]._autoCompleteData.$optionsContainerDiv;\n                switch (event.keyCode) {\n                    case 38: // Up\n                        if(!$currentOpt) {\n                            changeCurrentOpt($optionsContainerDiv.children().eq(0));\n                            prev = $currentOpt;\n                        } else {\n                            prev = $currentOpt.prev();\n                        }\n                        if(prev && prev.hasClass('ac-opt')) {\n                            changeCurrentOpt(prev);\n                        }\n                        break;\n                    case 40: // Down\n                        if(!$currentOpt) {\n                            changeCurrentOpt($optionsContainerDiv.children().eq(0));\n                            next = $currentOpt;\n                        } else {\n                            next = $currentOpt.next();\n                        }\n                        if(next && next.hasClass('ac-opt')) {\n                            changeCurrentOpt(next);\n                        }\n                        break;\n                    case 13:  // Return\n                        if($optionsContainerDiv.css('display') !== 'none') {\n                            chooseOption(event, $currentOpt.attr('data-opt-idx'));\n                        }\n                        break;\n                    default:\n                        computeOptions();\n                        break;\n                }\n            }\n\n            // if not initialized\n            if(!storedData) {\n                createOptionsDiv();\n                computeOptions();\n                return $this.each(function() {\n                    $this.bind('focus.ac', computeOptions).bind('keyup.ac', keyHandler).bind('blur.ac', onBlur);\n                });\n            }\n        },\n        destroy: function() {\n            return this.each(function() {\n                var $this = $(this);\n                $this.unbind('.ac');\n                $this[0]._autoCompleteData.$optionsContainerDiv.remove();\n                delete $this[0]._autoCompleteData;\n            });\n        },\n        add: function(options) {\n            var $this = this, // selected jquery object\n                settings = $this[0]._autoCompleteData.settings;\n            // create unique\n            function unique(arr) {\n                var uniqArr = [];\n                $.each(arr, function(idx, el) {\n                    if($.inArray(el, uniqArr) === -1) {\n                        uniqArr.push(el);\n                    }\n                });\n                return uniqArr;\n            }\n            // options ~ Array\n            options = (options instanceof Array)? options:[options];\n            options = unique(options.concat(settings.data));\n            settings.data = settings.sort(options);\n        },\n        remove: function(options) {\n            var index,\n                $this = this, // selected jquery object\n                settings = $this[0]._autoCompleteData.settings;\n            // options ~ Array\n            options = (options instanceof Array)? options:[options];\n            $.each(options, function(idx, option) {\n                index = settings.lookUp(settings.data, option);\n                if(index !== -1) {\n                    settings.data.splice(index, 1);\n                }\n            });\n        }\n    };\n\n    $.fn.autocomplete = function(method) {\n        if (methods[method]) {\n            return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === 'object' || !method) {\n            return methods.init.apply(this, arguments);\n        } else {\n            $.error(method + ': not-supported');\n        }\n    };\n})(Zepto || jQuery);\n"],"sourceRoot":"/source/"}